<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&libraries=places"></script>
<script type="text/javascript">
  
  var map, places, iw;
  var markers = [];
  var searchTimeout;
  var centerMarker;
  var autocomplete;
  var hostnameRegexp = new RegExp('^https?://.+?/');
  var repeat = 1;
  
  function initialize() {
    var myLatlng = new google.maps.LatLng(<?=$this->session->lat?>,<?=$this->session->long?>);
    var myOptions = {
      zoom: 13,
      center: myLatlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
    map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);
    
    /*
    var geocoder = new google.maps.Geocoder();
    geocoder.geocode({'address': '<?=$this->user->address?><?=$this->user->zip?>,<?=$this->user->city?>,<?=$this->user->state?>,USA'}, function(results, status) {
          if(status == google.maps.GeocoderStatus.OK) 
          {
               result = results[0].geometry.location;
               console.log(result);

               map.setCenter(result);
           }
    });
    */
    places = new google.maps.places.PlacesService(map);
    google.maps.event.addListener(map, 'tilesloaded', tilesLoaded);
    
    document.getElementById('keyword').onkeyup = function(e) {
      if (!e) var e = window.event;
      if (e.keyCode != 13) return;
      document.getElementById('keyword').blur();
      search('<?=$this->item->name?>');
    }

    var typeSelect = document.getElementById('type');
    typeSelect.onchange = function() {
      search();
    };

    var rankBySelect = document.getElementById('rankBy');
    rankBySelect.onchange = function() {
      search();
    };

  }
  
  function tilesLoaded() {
    search();
    google.maps.event.clearListeners(map, 'tilesloaded');
    google.maps.event.addListener(map, 'zoom_changed', searchIfRankByProminence);
    google.maps.event.addListener(map, 'dragend', search);
  }
  
  function searchIfRankByProminence() {
    if (document.getElementById('rankBy').value == 'prominence') {
      search();
    }    
  }

  function search() {
    clearResults();
    //if(repeat == 1){
    	clearMarkers();
    	//repeat++;
    //}

    if (searchTimeout) {
      window.clearTimeout(searchTimeout);
    }
    searchTimeout = window.setTimeout(reallyDoSearch, 500);
  }
  
  function reallyDoSearch() {      
    var type = document.getElementById('type').value;
    var keyword = document.getElementById('keyword').value;
    var rankBy = document.getElementById('rankBy').value;
  	
  	var type='restaurant';
  	var keyword = '<?=$this->item->name?>';
  	var rankBy = 'distance';
  	
    var search = {};
    
    if (keyword) {
      search.keyword = keyword;
    }
    
    if (type != 'establishment') {
      search.types = [type];
    }
    
    if (rankBy == 'distance' && (search.types || search.keyword)) {
      search.rankBy = google.maps.places.RankBy.DISTANCE;
      search.location = map.getCenter();
      //centerMarker = '';
      // mark the center if moved
  	
  	 if(repeat == 1){
  	 centerMarker = new google.maps.Marker({
        position: search.location,
        animation: google.maps.Animation.DROP,
        map: map
      });
      
      repeat++;
     }
    //*/
    } else {
      search.bounds = map.getBounds();
    }
    
    places.search(search, function(results, status) {
      if (status == google.maps.places.PlacesServiceStatus.OK) {
        for (var i = 0; i < results.length; i++) {
         var icon = 'http://gmaps-samples-v3.googlecode.com/svn/trunk/places/icons/number_' + (i+1) + '.png';
          markers.push(new google.maps.Marker({
            position: results[i].geometry.location,
            animation: google.maps.Animation.DROP,
          	icon:icon
          }));
          google.maps.event.addListener(markers[i], 'click', getDetails(results[i], i));
          window.setTimeout(dropMarker(i), i * 100);
          addResult(results[i], i);
        }
      }
    });
  }

  function clearMarkers() {
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    markers = [];
    if (centerMarker) {
      //centerMarker.setMap(null);
    }
  }

  function dropMarker(i) {
    return function() {
      if (markers[i]) {
        markers[i].setMap(map);
      }
    }
  }

  function addResult(result, i) {
    var results = document.getElementById('results');
    var tr = document.createElement('tr');
    tr.style.backgroundColor = (i% 2 == 0 ? '#F0F0F0' : '#FFFFFF');
    tr.onclick = function() {
      google.maps.event.trigger(markers[i], 'click');
    };

    var iconTd = document.createElement('td');
    var nameTd = document.createElement('td');
    var icon = document.createElement('img');
    icon.src = 'icons/number_' + (i+1) + '.png';
    icon.setAttribute('class', 'placeIcon');
    icon.setAttribute('className', 'placeIcon');
    var name = document.createTextNode(result.name);
    //iconTd.appendChild(icon);
    nameTd.appendChild(name);
    tr.appendChild(iconTd);
    tr.appendChild(nameTd);
    results.appendChild(tr);
  }

  function clearResults() {
    var results = document.getElementById('results');
    while (results.childNodes[0]) {
      results.removeChild(results.childNodes[0]);
    }
  }

  function getDetails(result, i) {
    return function() {
      places.getDetails({
          reference: result.reference
      }, showInfoWindow(i));
    }
  }

  function showInfoWindow(i) {
    return function(place, status) {
      if (iw) {
        iw.close();
        iw = null;
      }
      
      if (status == google.maps.places.PlacesServiceStatus.OK) {
        iw = new google.maps.InfoWindow({
          content: getIWContent(place)
        });
        iw.open(map, markers[i]);        
      }
    }
  }
  
  function getIWContent(place) {
    var content = '';
    content += '<table>';
    content += '<tr class="iw_table_row">';
    content += '<td style="text-align: right"></td>';
    content += '<td><b><a href="' + place.url + '">' + place.name + '</a></b></td></tr>';
    content += '<tr class="iw_table_row"><td class="iw_attribute_name">Address:</td><td>' + place.vicinity + '</td></tr>';
    if (place.formatted_phone_number) {
      content += '<tr class="iw_table_row"><td class="iw_attribute_name">Telephone:</td><td>' + place.formatted_phone_number + '</td></tr>';      
    }
    if (place.rating) {
      var ratingHtml = '';
      for (var i = 0; i < 5; i++) {
        if (place.rating < (i + 0.5)) {
          ratingHtml += '&#10025;';
        } else {
          ratingHtml += '&#10029;';
        }
      }
      content += '<tr class="iw_table_row"><td class="iw_attribute_name">Rating:</td><td><span id="rating">' + ratingHtml + '</span></td></tr>';
    }
    if (place.website) {
      var fullUrl = place.website;
      var website = hostnameRegexp.exec(place.website);
      if (website == null) { 
        website = 'http://' + place.website + '/';
        fullUrl = website;
      }
      content += '<tr class="iw_table_row"><td class="iw_attribute_name">Website:</td><td><a href="' + fullUrl + '">' + website + '</a></td></tr>';
    }
    content += '</table>';
    return content;
  }

  google.maps.event.addDomListener(window, 'load', initialize);

</script>
<style>
table {
  font-size: 12px;
}
#map_canvas {
  height: 300px;
}
#controls {
  text-align: right;
}
.placeIcon {
  width: 32px;
  height: 37px;
  margin: 4px;
}
.hotelIcon {
  width: 24px;
  height: 24px;
}
#listing{
	overflow: auto;
	height: 250px;
}
#resultsTable {
  border-collapse: collapse;
  width: 240px;
}
#rating {
  font-size: 13px;
  font-family: Arial Unicode MS;
}
#keywordsLabel {
  text-align: right;
  width: 70px;
  font-size: 14px;
  padding: 4px;
  position: absolute;
}
.iw_table_row {
  height: 18px;
}
.iw_attribute_name {
  font-weight: bold;
  text-align: right;
}
#iconCredit {
  font-size: 11px;
  text-align: right;
  width: 640px;
  font-style: italic;
}
#hidethis{
	visibility:hidden;
	display:none;
}
</style>

<div class=''><a class='btn' href='<?=HTTP.WWW_ROOT?>/user/meal/plan/code/<?=$this->user_meal->code?>'><i class='icon icon-arrow-left icon-black'></i> Back to Meal Plan</a></div>

<h3>
Searching for <?=$this->item->name?>
</h3>
<div class='row-fluid'>
 <div class='span12' id='hidethis'>
    <input id="keyword" type="text" value="mexican" />
    <select id="type">
      <option value="bar">Bars</option>
      <option value="cafe">Cafe</option>
      <option value="clothing_store">Clothing store</option>
      <option value="museum">Museums</option>
      <option value="restaurant" selected="selected">Restaurants</option>
      <option value="university">University</option>
    </select>
    <select id="rankBy">
      <option value="prominence">Prominence</option>
      <option value="distance">Distance</option>
    </select>
 </div>
</div>
 

<div class='row-fluid'>
 <div class='span12'>
	
	 <div class='span9'> 
	 	<small class='muted'>Searching nearby your location.</small>
	 	<div id="map_canvas" class='thumbnail'></div>
	  </div>
	
	 <div class='span3'> 
	 	<small class='muted'>Select to see location.</small>
	 	<div id="listing" class='thumbnail'>
	 		<table id="resultsTable"><tbody id="results"></tbody></table>
	 	</div>
		  
	  </div>
	</div>
</div>

<!-- 
<div class='span1'>
</div>
<div class='span10'>
	
	<div id='b_location' class='thumbnail'></div>

</div>
<div class='span1'>
</div>

<style>
	#b_location{
		height:350px;
	}
</style>
<script>
	jQuery(window).ready(function() {
		jQuery('#b_location').gMap({ 
			address: '',
			zoom: 13,
			markers: [{ 
				'address' : 'Miami'
			}]
		});	
	});
</script>

<body onLoad="initialize('mapWrapper')">
-->